name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # フロントエンド（Next.js）のCI
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v4

      - name: Node.jsのセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: 依存関係のインストール
        run: npm ci

      - name: ESLintチェック
        run: npm run lint

      - name: TypeScript型チェック
        run: npx tsc --noEmit

      - name: ビルドテスト
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_API_URL: http://localhost:8000

      # テストが追加されたら有効化
      # - name: テスト実行
      #   run: npm test

  # バックエンド（FastAPI）のCI
  backend:
    name: Backend CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v4

      - name: Pythonのセットアップ
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: './backend/requirements.txt'

      - name: 依存関係のインストール
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8 black mypy

      - name: コードフォーマットチェック（Black）
        run: black --check .

      - name: Lintチェック（Flake8）
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: 型チェック（mypy）
        run: mypy . --ignore-missing-imports || true

      # テストが追加されたら有効化
      # - name: テスト実行
      #   run: pytest --cov=. --cov-report=xml
      #   env:
      #     SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      #     SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      #     SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      #     OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  # 統合チェック（全ジョブ成功確認）
  check:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    steps:
      - name: 全チェック完了
        run: echo "✅ すべてのCIチェックが完了しました"
